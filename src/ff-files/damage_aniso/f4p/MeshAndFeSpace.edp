/**************************************************************************************
*                                                                                     *
*           This file is a part of PSD project                                        *
*                                                                                     *
*       -------------------------------------------------------------------           *
*                                                                                     *
*       Copyright 2019-2025 CEA/DES                                                   *
*                                                                                     *
*       Licensed under the Apache License, Version 2.0  (the "License");              *
*       you may not use this file except in compliance with the License.              *
*       You may obtain a copy of the License at                                       *
*                                                                                     *
*           http://www.apache.org/licenses/LICENSE-2.0                                *
*                                                                                     *
*       Unless required by applicable law or agreed to in writing, software           *
*       distributed under the License is distributed on an  "AS IS"  BASIS,           *
*       WITHOUT  WARRANTIES  OR  CONDITIONS  OF  ANY  KIND,  either express           *
*       or implied. See  the License  for  the  specific language governing           *
*       permissions and limitations under the License.                                *
*                                                                                     *
*       -------------------------------------------------------------------           *
*                                                                                     *
*                                                                                     *
*       Comment:  This test simply checks if the loading of MatrixPlotter             *
*                 works well                                                          *
*                                                                                     *
**************************************************************************************/                                                                       
                                                                              
                                                                              
                                                                              
                                                                                
//==============================================================================
// ------- The finite element mesh name from commandline-------                 
//==============================================================================
                                                                                
  ThName = getARGV( "-mesh" , ThName );                                       
                                                                                
//==============================================================================
// ------- Error message if wrong mesh detected -------                         
//==============================================================================
                                                                                
  if(ThName.find(".mesh") == -1 && ThName.find(".msh") == -1)               
   cout <<"INVALID MESH: PSD only accepts '.msh' or '.mesh' formats"<< endl;  
                                                                                
//==============================================================================
// ------- The finite element mesh -------                                      
// ---------------------------------------------------------------------------- 
//  Th        : Finite element mesh                                             
//==============================================================================
  timerbegin("Solver",t1)                                                                              
                                                                                
  meshN Th;                                                                     
                                                                                
  if(ThName.find(".msh") > -1)                                                
    {                                                                           
      load "gmsh"                                                             
      Th = gmshloadN(ThName);                                                   
    }                                                                           
  if(ThName.find(".mesh") > -1)                                               
    {                                                                           
      Th = readmeshN(ThName);                                                   
    }
                                                        
                                                                                                                                                         
  Th=trunc(Th, 1, renum=1);
  
  string ThNbTriang = ThName(0:ThName.find(".msh")-1);     
                                                                              
//==============================================================================
// ------- The finite element space  -------                                    
// ---------------------------------------------------------------------------- 
//  Vh        : Mixed finite element space for displacement      
//  Sh        : Finite element space for quadrature points with 3 (2D) 
//  components (All the quantities for Mfront like stress and strain tensor in 2D)     
//  Sh2       : FInite element space for quadrature points with 2 components. 
//  First component is a temperature scalar field and the second one is the nonlocal equivalent strain
//  Ih        : Finite element space for all the state variables components which come from Mfront
//  c.f. desmorat20152dnonlocal.mfront file for the compiled law and corresponding unit test Test_8
//  Isv0 = rH11, Isv1 = rH22, Isv2 = rH33, Isv3 = sqrt(2.)*rH12, Isv4 = D11, Isv5 = D22, 
//  Isv6 = D33, Isv7 = sqrt(2.)*D12, Isv8 = i2H11, Isv9 = i2H22, Isv10 = i2H33, Isv11 = sqrt(2.)*i2H12,
//  Isv12 = ey.
//  Mh        : Finite element space with 6 components for the effective tensor coming from Mfront.
//  Wh0       : Finite element for all P0 quantities used in the formulation
//  Wh00       : Finite element for all [P0,P0] quantities used in the formulation, such as eigenvectors for D
//  Vh1       : Finite space for the scalar P1 field for the nonlocal equivalent strain solution
//==============================================================================
                                                                                
 fespace Vh   ( Th , Pk );                                                      
                                                                                                                              
 fespace Sh  ( Th , [FEQF2,FEQF2,FEQF2] );
 
 fespace Sh2  ( Th , [FEQF2,FEQF2] );
                 
 fespace Ih  ( Th , [FEQF2,FEQF2,FEQF2,FEQF2,FEQF2,FEQF2,FEQF2,FEQF2,FEQF2,FEQF2,FEQF2,FEQF2,FEQF2] );  
 
 fespace Mh  ( Th , [FEQF2,FEQF2,FEQF2,FEQF2,FEQF2,FEQF2] );
 
 fespace Wh0  ( Th , Wk );
 
 fespace Wh00  ( Th , [Wk,Wk]);           
                                                                              
 fespace Vh1  ( Th , Zk );  
