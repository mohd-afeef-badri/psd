/**************************************************************************************
*                                                                                     *
*           This file is a part of PSD project                                        *
*                                                                                     *
*       -------------------------------------------------------------------           *
*                                                                                     *
*       Copyright 2019-2025 CEA/DES                                                   *
*                                                                                     *
*       Licensed under the Apache License, Version 2.0  (the "License");              *
*       you may not use this file except in compliance with the License.              *
*       You may obtain a copy of the License at                                       *
*                                                                                     *
*           http://www.apache.org/licenses/LICENSE-2.0                                *
*                                                                                     *
*       Unless required by applicable law or agreed to in writing, software           *
*       distributed under the License is distributed on an  "AS IS"  BASIS,           *
*       WITHOUT  WARRANTIES  OR  CONDITIONS  OF  ANY  KIND,  either express           *
*       or implied. See  the License  for  the  specific language governing           *
*       permissions and limitations under the License.                                *
*                                                                                     *
*       -------------------------------------------------------------------           *
*                                                                                     *
*                                                                                     *
* Comment: This test checks the MFrontParameter routine provided in the mfront plugin *
*          of PSD works well. Behaviour is provided in Commandline by the flag        *
*          -mfront_behaviour                                                          *
*                                                                                     *
**************************************************************************************/    
  include "getARGV.idp";                         // Get Commandline arguments
                                                                                                                                                                                                                                  
  load    "../cpp/mfront"
  
  string     mfrontBehaviour     = getARGV( "-mfront_behaviour" , "Elasticity" );
  
  if(mfrontBehaviour=="Elasticity"){

	  string    BehaviourHypothesis = "GENERALISEDPLANESTRAIN"    ;
	  
	  string    PropertyNames       = "YoungModulus PoissonRatio" ;
	  real[int] PropertyValues      = [ 150, 0.3   ];
	  
	  string    ExternalStateVariableNames       = "Temperature" ;    
	  real[int] ExternalStateVariableValues      = [ 293.15   ]  ;

	  BehaviourHypothesis = "GENERALISEDPLANESTRAIN"    ;
	  cout << " ================================================== " << endl;
	  cout << "   PsdMfrontHandler using PSD  Hypothesis           " << endl;
	  cout << "          "<<BehaviourHypothesis<<"                 " << endl;  
	  cout << " ================================================== " << endl;

	  

	    
	  PsdMfrontHandler( "Elasticity"                                                    , 
		             mfrontBehaviourHypothesis         = BehaviourHypothesis         ,
		             mfrontPropertyNames               = PropertyNames               ,
		             mfrontPropertyValues              = PropertyValues              ,
		             mfrontExternalStateVariableNames  = ExternalStateVariableNames  ,
		             mfrontExternalStateVariableValues = ExternalStateVariableValues
		                 );


	  cout << "                                                    " << endl;         
	  cout << " ================================================== " << endl;


	  BehaviourHypothesis = "PLANESTRAIN"    ;
	  cout << " ================================================== " << endl;
	  cout << "   PsdMfrontHandler using PSD  Hypothesis           " << endl;
	  cout << "          "<<BehaviourHypothesis<<"                 " << endl;  
	  cout << " ================================================== " << endl;                           


	  PsdMfrontHandler( "Elasticity"                                               , 
		                   mfrontBehaviourHypothesis = BehaviourHypothesis     ,
		                   mfrontPropertyNames       = PropertyNames           ,
		                   mfrontPropertyValues      = PropertyValues 
		                 );   
		                 
	  cout << "                                                    " << endl;         
	  cout << " ================================================== " << endl;
	  

	  BehaviourHypothesis = "TRIDIMENSIONAL"    ;
	  cout << " ================================================== " << endl;
	  cout << "   PsdMfrontHandler using PSD  Hypothesis           " << endl;
	  cout << "          "<<BehaviourHypothesis<<"                 " << endl;  
	  cout << " ================================================== " << endl;                           


	  PsdMfrontHandler( "Elasticity"                                               , 
		                   mfrontBehaviourHypothesis = "TRIDIMENSIONAL"        ,
		                   mfrontPropertyNames       = PropertyNames           ,
		                   mfrontPropertyValues      = PropertyValues  
		                 );   
		                 
	  cout << "                                                    " << endl;         
	  cout << " ================================================== " << endl;
  }
  
  if(mfrontBehaviour=="desmorat20152d"){
  	  
  	  string    BehaviourHypothesis = "GENERALISEDPLANESTRAIN"    ;
	  string    PropertyNames       = "YoungModulus PoissonRatio Brittleness Kappa0 BigS SmallS" ;
	  real[int] PropertyValues      = [ 37e9, 0.2, 1.6666666666666667, 9e-5, 1.45e-4, 4.9];
	  
	  string    ExternalStateVariableNames       = "Temperature" ;    
	  real[int] ExternalStateVariableValues      = [ 293.15   ]  ;
	  


	  BehaviourHypothesis = "PLANESTRAIN"    ;
	  cout << " ================================================== " << endl;
	  cout << "   PsdMfrontHandler using PSD  Hypothesis           " << endl;
	  cout << "          "<<BehaviourHypothesis<<"                 " << endl;  
	  cout << " ================================================== " << endl;                           


	  PsdMfrontHandler( "desmorat20152d"                                              , 
		                   mfrontBehaviourHypothesis = BehaviourHypothesis     ,
		                   mfrontPropertyNames       = PropertyNames           ,
		                   mfrontPropertyValues      = PropertyValues 
		                 );   
		                 
	  cout << "                                                    " << endl;         
	  cout << " ================================================== " << endl;
  }
		                                         
