/**************************************************************************************
*                                                                                     *
*           This file is a part of PSD project                                        *
*                                                                                     *
*       -------------------------------------------------------------------           *
*                                                                                     *
*       Copyright 2019-2025 CEA/DES                                                   *
*                                                                                     *
*       Licensed under the Apache License, Version 2.0  (the "License");              *
*       you may not use this file except in compliance with the License.              *
*       You may obtain a copy of the License at                                       *
*                                                                                     *
*           http://www.apache.org/licenses/LICENSE-2.0                                *
*                                                                                     *
*       Unless required by applicable law or agreed to in writing, software           *
*       distributed under the License is distributed on an  "AS IS"  BASIS,           *
*       WITHOUT  WARRANTIES  OR  CONDITIONS  OF  ANY  KIND,  either express           *
*       or implied. See  the License  for  the  specific language governing           *
*       permissions and limitations under the License.                                *
*                                                                                     *
*       -------------------------------------------------------------------           *
*                                                                                     *
*                                                                                     *
* Comment: This test checks the MFrontParameter routine provided in the mfront plugin *
*          of PSD works well. Behaviour is provided in Commandline by the flag        *
*          -mfront_behaviour                                                          *
*                                                                                     *
**************************************************************************************/    
  include "getARGV.idp";                         // Get Commandline arguments
  
  load    "../cpp/mfront"
  load    "Element_QF"
  
  mesh Th = square(2,2);
  
  string     mfrontBehaviour     = getARGV( "-mfront_behaviour" , "Elasticity" );
  
  if(mfrontBehaviour=="Elasticity"){
  

	  // Quadrature space with 3 elements for stress and strain tensor
	  fespace Sh  ( Th , [FEQF2,FEQF2,FEQF2] );
	  Sh [Eps11,Eps22,Eps12];
	  Sh [Sig11,Sig22,Sig12];

	  [Eps11,Eps22,Eps12] = [1., 1., 1.]; // Dummy strain

	  string    PropertyNames   = "YoungModulus PoissonRatio";
	  real[int] PropertyValues  = [ 150, 0.3   ];

	  PsdMfrontHandler( "Elasticity"                                               ,
		                   mfrontBehaviourHypothesis = "GENERALISEDPLANESTRAIN",
		                   mfrontPropertyNames       = PropertyNames           ,
		                   mfrontPropertyValues      = PropertyValues          ,
		                   mfrontStrainTensor        = Eps11[]                 ,
		                   mfrontStressTensor        = Sig11[]
		                 );

	  real epsilon = 1e-9;

	  real SigxxRef = 288.46153846153845279332017526031 ,
	       SigyyRef = 288.46153846153845279332017526031 ,
	       SigxyRef = 115.38461538461538680166995618492 ;

	  int prec = cout.precision(32);



	  assert( abs(Sig11[][0]-SigxxRef) <= epsilon  &&
		  abs(Sig11[][3]-SigyyRef) <= epsilon  &&
		  abs(Sig11[][6]-SigxyRef) <= epsilon
		);

	  cout << " ================================================== " << endl;
	  cout << "      STRESS TENSOR CALUCLATED BY MFRONT          " << endl;
	  cout << " ================================================== " << endl;
	  cout << "                                                    " << endl;
	  cout << " Sigxx " << Sig11[][0] << endl;
	  cout << " Sigyy " << Sig11[][3] << endl;
	  cout << " Sigxy " << Sig11[][6] << endl;
	  cout << "                                                    " << endl;
	  cout << " ================================================== " << endl;
		                     /**/
   }
