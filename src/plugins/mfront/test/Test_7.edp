/**************************************************************************************
*                                                                                     *
*           This file is a part of PSD project                                        *
*                                                                                     *
*       -------------------------------------------------------------------           *
*                                                                                     *
*       Copyright 2019-2025 CEA/DES                                                   *
*                                                                                     *
*       Licensed under the Apache License, Version 2.0  (the "License");              *
*       you may not use this file except in compliance with the License.              *
*       You may obtain a copy of the License at                                       *
*                                                                                     *
*           http://www.apache.org/licenses/LICENSE-2.0                                *
*                                                                                     *
*       Unless required by applicable law or agreed to in writing, software           *
*       distributed under the License is distributed on an  "AS IS"  BASIS,           *
*       WITHOUT  WARRANTIES  OR  CONDITIONS  OF  ANY  KIND,  either express           *
*       or implied. See  the License  for  the  specific language governing           *
*       permissions and limitations under the License.                                *
*                                                                                     *
*       -------------------------------------------------------------------           *
*                                                                                     *
*                                                                                     *
* Comment: This test checks the MFrontParameter routine provided in the mfront plugin *
*          of PSD works well. Behaviour is provided in Commandline by the flag        *
*          -mfront_behaviour                                                          *
*                                                                                     *
**************************************************************************************/
  load    "../cpp/mfront"
  load    "Element_QF"

  mesh Th = square(2,2);

  // Quadrature space with 6 elements for Material tensor
  fespace Mh  ( Th , [FEQF2,FEQF2,FEQF2,FEQF2,FEQF2,FEQF2] );
  Mh [Mt11,Mt12,Mt13,Mt22,Mt23,Mt33];

  // Quadrature space with 3 elements for stress and strain tensor
  fespace Sh  ( Th , [FEQF2,FEQF2,FEQF2] );
  Sh [Eps11,Eps22,Eps12];
  Sh [Sig11,Sig22,Sig12];

  [Eps11,Eps22,Eps12] = [1., 1., 1.]; // Dummy strain

  string    PropertyNames   = "YoungModulus PoissonRatio";
  real[int] PropertyValues  = [ 150, 0.3   ];

  PsdMfrontHandler( "Elasticity"                                               ,
                           mfrontBehaviourHypothesis = "GENERALISEDPLANESTRAIN",
                           mfrontPropertyNames       = PropertyNames           ,
                           mfrontPropertyValues      = PropertyValues          ,
                           mfrontMaterialTensor      = Mt11[]                  ,
                           mfrontStrainTensor        = Eps11[]                 ,
                           mfrontStressTensor        = Sig11[]
                         );

  real epsilon = 1e-9;
  real MtRef11 = 201.92307692307690558664035052061 ,
       MtRef12 = 86.538461538461532995825109537691 ,
       MtRef13 = 0                                 ,
       MtRef22 = 201.92307692307690558664035052061 ,
       MtRef23 = 0                                 ,
       MtRef33 = 115.38461538461538680166995618492 ;


  real SigxxRef = 288.46153846153845279332017526031 ,
       SigyyRef = 288.46153846153845279332017526031 ,
       SigxyRef = 115.38461538461538680166995618492 ;

  int prec = cout.precision(32);



  assert( abs(Sig11[][0]-SigxxRef) <= epsilon  &&
          abs(Sig11[][3]-SigyyRef) <= epsilon  &&
          abs(Sig11[][6]-SigxyRef) <= epsilon
        );


  assert( abs(Mt11[][0]-MtRef11) <= epsilon  &&
          abs(Mt11[][3]-MtRef12) <= epsilon  &&
          abs(Mt11[][6]-MtRef13) <= epsilon  &&
          abs(Mt11[][9]-MtRef22) <= epsilon  &&
          abs(Mt11[][12]-MtRef23) <= epsilon  &&
          abs(Mt11[][15]-MtRef33) <= epsilon
        );

  cout << " ================================================== " << endl;
  cout << "      MATERIAL TENSOR CALUCLATED BY MFRONT          " << endl;
  cout << " ================================================== " << endl;
  cout << "                                                    " << endl;
  cout << " Mt11 " << Mt11[][0] << endl;
  cout << " Mt12 " << Mt11[][3] << endl;
  cout << " Mt13 " << Mt11[][6] << endl;
  cout << " Mt22 " << Mt11[][9] << endl;
  cout << " Mt23 " << Mt11[][12] << endl;
  cout << " Mt33 " << Mt11[][15] << endl;
  cout << "                                                    " << endl;
  cout << " ================================================== " << endl;
                             /**/

  cout << " ================================================== " << endl;
  cout << "      STRESS TENSOR CALUCLATED BY MFRONT          " << endl;
  cout << " ================================================== " << endl;
  cout << "                                                    " << endl;
  cout << " Sigxx " << Sig11[][0] << endl;
  cout << " Sigyy " << Sig11[][3] << endl;
  cout << " Sigxy " << Sig11[][6] << endl;
  cout << "                                                    " << endl;
  cout << " ================================================== " << endl;
                             /**/
