/**************************************************************************************
*                                                                                     *
*           This file is a part of PSD project                                        *
*                                                                                     *
*       -------------------------------------------------------------------           *
*                                                                                     *
*       Copyright 2019-2025 CEA/DES                                                   *
*                                                                                     *
*       Licensed under the Apache License, Version 2.0  (the "License");              *
*       you may not use this file except in compliance with the License.              *
*       You may obtain a copy of the License at                                       *
*                                                                                     *
*           http://www.apache.org/licenses/LICENSE-2.0                                *
*                                                                                     *
*       Unless required by applicable law or agreed to in writing, software           *
*       distributed under the License is distributed on an  "AS IS"  BASIS,           *
*       WITHOUT  WARRANTIES  OR  CONDITIONS  OF  ANY  KIND,  either express           *
*       or implied. See  the License  for  the  specific language governing           *
*       permissions and limitations under the License.                                *
*                                                                                     *
*       -------------------------------------------------------------------           *
*                                                                                     *
*                                                                                     *
**************************************************************************************/ 

/**************************************************************************************
     -------------------------------------------------------------------                                      
     Comment  : This test  checks partitoning of a pointcloud and prod-
                duction of a partitioned mesh via the top-ii-vol plugin
                from PSD. Partitioning is restricted Y direction.
                                                                                              
     ------------------------------------------------------------------- 
**************************************************************************************/

load "../cpp/top-ii-vol"

topiivolpart( "./../../../../etc/Point-Cloud", 
              outfile ="point-cloud-strip", 
              pointsx=63, 
              pointsy=57, 
              pointsz=4, 
              zdepth=-1920.0, 
              partx=1, 
              party=mpisize, 
              partz=1
            ); 
//topiivolpart("../../etc/Point-Cloud",outfile="point-cloud-strip",pointsx=63,pointsy=57);
mpiBarrier(mpiCommWorld);
   topiivolmesh( "point-cloud-strip",
                 outfile="top-ii-vol-mesh",
                 pointsz=4,
                 zdepth=-1920.0,
                 partx=1,
                 party=mpisize,
                 partz=1
               );
   
//topiivolmesh("point-cloud-strip",outfile="top-ii-vol-mesh",pointsz=4,zdepth=-1920.0);


load "PETSc"
func Pk = P1;
macro grad(u)[dx(u), dy(u), dz(u)]//three-dimensional gradient
macro def(u)u//

{
    macro dimension()3// EOM
    include "macro_ddm.idp"
    mesh3 Th;

    Th=readmesh3("top-ii-vol-mesh_"+mpirank+".mesh");   
    reconstructDmesh(Th);
    
    fespace Wh(Th, Pk);
    Wh<real> u;
        
    Mat A;
    createMat(Th, A, Pk)
      

    varf vPb(u, v) = intN(Th)(grad(u)' * grad(v)) + on(6, u = 15.0)+ on(3, u = 1.0);
           
    real[int] rhs = vPb(0, Wh);
    set(A, sparams = "-ksp_type cg" );
    A = vPb(Wh, Wh);
     
    u[] = A^-1 * rhs; 

    int[int] fforder=[1];
    savevtk("solutionY.vtu",Th,u,order=fforder, dataname = "u");
}    
